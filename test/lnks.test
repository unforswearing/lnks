# using shelltestrunner
# https://github.com/simonmichael/shelltestrunner
#
# A fun consequence of using tests -- if debug=true in main.sh, tests will fail.

# 1. Test that the --help option properly prints the full help text.

$ src/main.sh --help
lnks - help

Quickly search your Google Chrome or Safari tabs for matching urls and process the results.

Usage: lnks [query] <options>

Options
  -h, --help      prints this help message
  --safari        search for urls in Safari instead of Google Chrome
  --print         print urls to stdout
  --stdin         read new-line-separated urls from stdin for use with other options
  --markdown      print markdown formattined urls to stdout
  --html          print html formatted list of urls to stdout
  --csv           print csv formatted urls to stdout

Examples
  Print urls matching <query> from Google Chrome:

  lnks [query]
  lnks [query] --print

  Use Safari instead of Google Chrome:

  If the '--safari' flag follows query, search Safari URLs instead of Chrome.
  This option can be set permanently in settings.

  lnks [query] --safari --csv

  Read urls from files or other commands:

  Use the '--stdin' flag to read urls from standard input.
  cat urls.txt | lnks --stdin --csv

  Processing options:

  lnks [query] --markdown
  lnks [query] --html
  lnks [query] --csv

  lnks [query] --stdin [ --markdown | --html | --csv ]

Bugs
  --stdin followed by --print will produce inaccurate results.

Source
  <https://github.com/unforswearing/lnks>

Author
  unforswearing <https://github.com/unforswearing>
>=0

# 2. Test that unknown options are properly handled.

$ src/main.sh --fake-option
Usage: lnks [query] <options...>
Use 'lnks --help' to view the full help document
>2 /Please specify a query before passing any options./
>=!0

# 3. Test that the --print option can print a url matching 'query'

$ open "https://www.example.com"; src/main.sh example --print
https://www.example.com/
>=0

# 4. Test that the --markdown option can print markdown formatted urls

$ src/main.sh example --markdown
[Example Domain](https://www.example.com/)
>=0

# 5. Test that the --html option can print html formatted urls

$ src/main.sh example --html
> /.ul.
  .li..a href="https...www.example.com.".Example Domain..a...li.
..ul./
>=0

# 6. Test that the --csv option can print csv formatted urls

$ src/main.sh example --csv
> /date,title,url
^.*,"Example Domain",https\:\/\/www.example.com\//
>=0

# 7. Test that unknown options are caught futher in the script.

$ src/main.sh example --print --fake-option
Usage: lnks [query] <options...>
Use 'lnks --help' to view the full help document
>2 /Unknown argument: '--fake-option'/
>=!0

# 8. Test that the --markdown option works with --stdin

$ echo "https://www.example.com" | src/main.sh example --stdin --markdown
[Example Domain](https://www.example.com)
>=0

# 9. Test that the --html option works with --stdin

$ echo "https://www.example.com" | src/main.sh example --stdin --html
> /.ul.
  .li..a href="https...www.example.com".Example Domain..a...li.
..ul./
>=0

# 10. Test that the --csv option works with --stdin

$ echo "https://www.example.com" | src/main.sh example --stdin --csv
> /date,title,url
^.*,"Example Domain",https\:\/\/www.example.com/
>=0

# 11. Test that the --safari option works to use Safari instead of Chrome with the --print option

$ open -a Safari "https://www.example.com" && sleep 0.5; src/main.sh example --safari --print
https://www.example.com/
>=0

# 12. Test that the --safari option works to use Safari instead of Chrome with the --markdown option

$ src/main.sh example --safari --markdown
[Example Domain](https://www.example.com/)
>=0

# 13. est that the --safari option works to use Safari instead of Chrome with the --html option

$ echo "https://www.example.com" | src/main.sh example --stdin --html
> /.ul.
  .li..a href="https...www.example.com".Example Domain..a...li.
..ul./
>=0

# 14. Test that the --safari option works to use Safari instead of Chrome with the --csv option

$ echo "https://www.example.com" | src/main.sh example --stdin --csv
> /date,title,url
^.*,"Example Domain",https\:\/\/www.example.com/
>=0

# 15. Test that the removed --copy option prints a specific usage message.

$ src/main.sh example --copy
> /Option '--copy' has been removed from 'lnks'.*/
>=0

# 16. Test that the removed --save option prints a specific usage message.

$ src/main.sh example --save
> /Option '--save' has been removed from 'lnks'.*/
>=0

# 17. Test that the removed --pdf option prints a specific usage message.

$ src/main.sh example --pdf
> /Option '--pdf' has been removed from 'lnks'.*/
>=0

# 18. Test that the removed --instapaper option prints a specific usage message.

$ src/main.sh example --instapaper
> /Option '--instapaper' has been removed from 'lnks'.*/
>=0

# 19. Test that the removed --pinboard option prints a specific usage message.

$ src/main.sh example --pinboard
> /Option '--pinboard' has been removed from 'lnks'.*/
>=0

# 20. Test that lnks prints a message when no urls matching query are found.

$ src/main.sh yyy-example-zzz --print
No match for 'yyy-example-zzz' in chrome Urls.
>=0

# 21. Test that lnks prints a message when no urls matching query are found in Safari.

$ src/main.sh yyy-example-zzz --safari --print
No match for 'yyy-example-zzz' in Safari Urls.
>=0