#!/bin/env -i bash --noprofile --norc
# =================
# Updated 7/2/2023, 9/2/2021
# =================
#
# @todo Update lnks with better code and more options
# ---
# (see also: dev/dev-lnks.sh)
# (see also: dev/surls)
# ---
# Stage 1. improve code quality/style/consistency
#   - rename functions, improve option handling (multiple options), separate code into 
#     smaller units, more isolation from the user environment, etc
#    - accept multiple options by looping over the `$@` options array and parsing each item
# Stage 2. update project documentation
#   - including new `lib/` files
# Stage 3. add option (and docs) for creating and using plugins
#   - @note this will require planning to properly incorporate into the script
#   - plugin setting for lnks.conf
#     - `plugins={true|false}`
#   - using plugins
#     - plugins should accept a title and url.
#     - plugins should perform some external action.
#     - plugins can store their credentials with the plugin or in `lnks.conf`
#     - more TBD
# ---
# @todo update lnks behavior, re: options
# general: allow for multiple / chained options
# ---
# @todo new lnks option: settings
#   - `lnks --settings plugins=true`"
#   - or multiple opts enclosed in quotes. eg:
#    `lnks --settings "no_tracking=false default_browser=chrome"`
#   - available settings for lnks.conf
    # - no_tracking={bool} :: strip tracking params from url -> default `true`
    # - default_option={flag} :: option to use when lnks is run with no flag -> default `-p`
    # - default_browser={chrome|safari} :: use safari or chrome as default -> default `chrome`
    # - pdf_writer={name|path} :: choose another pdf converter -> default `wkhtmltopdf`
#     - TBD way to store username/password/api key for plugins
# ---
# @todo new lnks option: urls
# eg. `lnks --urls hrefs.txt --pdf`

lnx:lib:color() {
	local red="\033[31m" 
	local green="\033[32m" 
	local yellow="\033[33m" 
	local blue="\033[34m" 
	local reset="\033[39m" 
	local black="\033[30m" 
	local white="\033[37m" 
	local magenta="\033[35m" 
	local cyan="\033[36m" 
	local opt="$1" 
	shift
  # shellcheck disable=SC2145
	case "$opt" in
		(red) echo -en "${red}$@${reset}" ;;
		(green) echo -en "${green}$@${reset}" ;;
		(yellow) echo -en "${yellow}$@${reset}" ;;
		(blue) echo -en "${blue}$@${reset}" ;;
		(black) echo -en "${black}$@${reset}" ;;
		(white) echo -en "${white}$@${reset}" ;;
		(magenta) echo -en "${magenta}$@${reset}" ;;
		(cyan) echo -en "${cyan}$@${reset}" ;;
		(help) echo -en "colors <red|green|yellow|blue|black|magenta|cyan> string" ;;
	esac
}

# search $PATH for the presense of a tool. 
# eg. `require gdate`
lnx:lib:require() {
	local comm; comm="$(command -v "$1")" 
	if [[ -n $comm ]]
	then
    # `as` is a throwaway var added for clarity:
    # `require tool_name as var_name` instead of
    # `require tool_name var_name`
    as="$2";echo "$as">/dev/null 2>&1
    # `var` is the name of the function that will 
    # pass $comm path to another command
    var="$3"
    if [[ -n $var ]]; 
    then
      # create a function to return comm path named $var
      eval "function $var() { echo $comm; }"
		  true
    else 
      # if we aren't creating a variable, just return true
      true
    fi
	else
    # if the required command isn't found then print an error message
	  color red "$0: '$1' not found" #>/dev/null 2>&1
    false
	fi
}

# @note the top level helper namespace in this file is called `lnx`
# @note helper methods are under the `lnx:run` namespace
lnx:lib:help() {
  echo "lnks <option> <search term>"
  echo
  echo "Options:"
  echo "  -s|--save       save the link(s) to a .txt file on the desktop"
  echo "  -p|--print      print the link(s) to the console"
  echo "  -c|--copy       copy the link(s) to your clipboard"
  echo "  -m|--markdown		print link(s) in mardown format: [title](url)"
  echo "  -b|--pinboard   save the link(s) to pinboard.in"
  echo "  -w|--pdf        save each url as a pdf (requires 'wkhtmltopdf')"
# echo "  -u|--urls       read a list of plain text urls from a file and run a links option for each"
# echo "  -x|--settings   add a setting to lnks.conf. 
  echo "  -h|--help       print this help message"
  echo
}

# file "$HOME/.lnks.conf" && <read conf>
lnx:lib:file() {
	local name="$1" 
	if [[ -s "$name" ]]
	then
		true
	else
		# if the required file isn't found then print an error message
	  color red "$0: file '$1' not found" #>/dev/null 2>&1
    false
	fi
}

# @todo is this needed? maybe for wkhtmltopdf and pinboard stuff?
lnx:lib:prog() {
  [[ -z "$1" ]] && exit 0

  set +m
  tput civis

  eval "$1" >/dev/null 2>&1 &

  local pid
  pid=$!
  local spin
  spin="-\|/"
  local i
  i=0

  while kill -0 "$pid" 2>/dev/null; do
    i=$(((i + 1) % 4))
    printf "\r%s" ${spin:$i:1}
    sleep .07
  done
  printf "\r"

  tput cnorm
  set -m
}

# ------------------------------------------------------------------
# @note The remaining code in this script will be rewritten entirely
# ------------------------------------------------------------------
